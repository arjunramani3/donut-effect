inner_join(msa_chars, by='MetroShort') %>%
inner_join(df2, by = 'zip') %>%
mutate(date = as.Date(date),
zhvi_pop = zhvi*`2019 Population`) %>%
filter(date >= as.Date('2018-01-01'), date < as.Date(end_date)) %>%
group_by(zip) %>% mutate(zhvi_pop = na.approx(zhvi_pop, na.rm=FALSE, rule = 2)) %>%
group_by(msa_pop_group, date) %>%
summarise(zhvi_pop = sum(zhvi_pop, na.rm = TRUE),
population = sum(`2019 Population`, na.rm = TRUE)) %>%
mutate(zhvi = zhvi_pop/population) %>%
group_by(msa_pop_group) %>% mutate(zhvi = zhvi/zhvi[date == as.Date('2020-02-15')]*100) %>%
mutate(
val = zhvi, name = msa_pop_group,
type = case_when(str_detect(name, 'low') ~ '51+',
str_detect(name, 'mid') ~ '13-50',
str_detect(name, 'top12') ~ 'Other top 12',
TRUE ~ 'NY and SF'), emph = "b"
)
#construct dataset
temp <- chars %>% filter(!is.na(`2019 Population`), !is.na(dist_to_cbd)) %>%
inner_join(msa_chars, by='MetroShort') %>%
inner_join(df2, by = 'zip') %>%
mutate(date = as.Date(date),
zhvi_pop = zhvi*`2019 Population`) %>%
filter(date >= as.Date('2018-01-01'), date < as.Date(end_date)) %>%
group_by(zip) %>% mutate(zhvi_pop = na.approx(zhvi_pop, na.rm=FALSE, rule = 2)) %>%
group_by(msa_pop_group, date) %>%
summarise(zhvi_pop = sum(zhvi_pop, na.rm = TRUE),
population = sum(`2019 Population`, na.rm = TRUE)) %>%
mutate(zhvi = zhvi_pop/population) %>%
group_by(msa_pop_group) %>% mutate(zhvi = zhvi/zhvi[date == as.Date('2020-02-29')]*100) %>%
mutate(
val = zhvi, name = msa_pop_group,
type = case_when(str_detect(name, 'low') ~ '51+',
str_detect(name, 'mid') ~ '13-50',
str_detect(name, 'top12') ~ 'Other top 12',
TRUE ~ 'NY and SF'), emph = "b"
)
temp %>% ggplot(
aes(x=date, y = val, color = type, linetype = as.factor(emph),
alpha = as.factor(emph),size = as.factor(emph)), guide='none') +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
geom_line()+
xlim(as.Date('2018-01-01'), as.Date(end_date_long)) +
geom_vline(xintercept=as.Date('2020-02-15'), size=.5, color="black") +
geom_dl(aes(label = type), method = list(dl.trans(x=x+1.7, y=y+.35),'last.bumpup', cex = 1.5, hjust=1)) +
scale_colour_manual(values = c(teal, cardinal, black, green), guide='none')+
scale_size_manual(values = c(1.8, 1), guide="none")+
scale_alpha_manual(values = c(1, 0.8), guide="none")+
scale_linetype(guide='none') +
labs(x  = "",
y = "Home Value Index (Feb 2020=100)",
size = 10
)+
geom_text(label="Feb 2020", x=as.Date('2019-12-01'), y=95, size = 6, color = 'black',
) +
theme_minimal()+
theme(text = element_text(size=20),
plot.title= element_text(hjust = 0.5, family = "serif"),
plot.caption = element_text(size = 16),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20)
)
#save plot
ggsave('./figures-tables/zhvi_msa_grouped.png', plot = last_plot(), width = 10, height = 8)
###########################################
## Fig 2 Donut effect for USPS population and business flows
###########################################
#read in zip code level USPS flow data
usps <- read_csv('./data/USPS_zips.csv')
###########################################
## Fig 2 Donut effect for USPS population and business flows
###########################################
#read in zip code level USPS flow data
usps <- read_csv('./data/USPS_zips.csv')
## A. population flows
#construct dataset
temp <- chars %>% filter(!is.na(`2019 Population`)) %>%
inner_join(msa_chars, by='MetroShort') %>%
inner_join(usps, by = 'zip') %>%
mutate(date = as.Date(date)) %>%
filter(date >= as.Date('2018-01-01'), date < as.Date(end_date)) %>%
group_by(zip) %>% mutate(net_pop = na.approx(net_pop, na.rm=FALSE, rule = 2)) %>%
group_by(msa_pop_group, date) %>%
summarise(net_pop = sum(net_pop, na.rm = TRUE)/sum(`2019 Population`)*100) %>%
group_by(msa_pop_group) %>% mutate(net_pop = net_pop - net_pop[date == as.Date('2020-02-15')]) %>%
mutate(emph="b", val = net_pop, name = msa_pop_group)
#make plot
temp %>% ggplot(
aes(x=date, y = val, color = name, linetype = as.factor(emph),
alpha = as.factor(emph),size = as.factor(emph)), guide='none') +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
geom_line()+
xlim(as.Date('2018-01-01'), as.Date(end_date_long)) +
ylim(-1, .25) + #(-2, .3)
geom_vline(xintercept=as.Date('2020-02-15'), size=.5, color="black") +
geom_dl(aes(label = name), method = list(cex = 1.5, 'last.bumpup', cex = 1.5)) +
scale_colour_manual(values = c(teal, cardinal, black, green), guide='none')+
scale_size_manual(values = c(1.8, 1), guide="none")+
scale_alpha_manual(values = c(1, 0.8), guide="none")+
scale_linetype(guide='none') +
labs(x  = "",
y = "Deviations from Feb 2020 (% points)",
size = 7
)+
geom_text(label="Feb 2020", x=as.Date('2019-11-01'), y=-.5, size = 6, color = 'black') +
theme_minimal()+
theme(text = element_text(size=20),
plot.title= element_text(hjust = 0.5, family = "serif"),
plot.caption = element_text(size = 16),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20)
)
#make plot
temp %>% ggplot(
aes(x=date, y = val, color = name, linetype = as.factor(emph),
alpha = as.factor(emph),size = as.factor(emph)), guide='none') +
scale_x_date(date_labels="%Y",date_breaks  ="1 year") +
geom_line()+
xlim(as.Date('2018-01-01'), as.Date(end_date_long)) +
ylim(-.2, .2) + #(-2, .3)
geom_vline(xintercept=as.Date('2020-02-15'), size=.5, color="black") +
geom_dl(aes(label = name), method = list(cex = 1.5, 'last.bumpup', cex = 1.5)) +
scale_colour_manual(values = c(teal, cardinal, black, green), guide='none')+
scale_size_manual(values = c(1.8, 1), guide="none")+
scale_alpha_manual(values = c(1, 0.8), guide="none")+
scale_linetype(guide='none') +
labs(x  = "",
y = "Deviations from Feb 2020 (% points)",
size = 7
)+
geom_text(label="Feb 2020", x=as.Date('2019-11-01'), y=-.5, size = 6, color = 'black') +
theme_minimal()+
theme(text = element_text(size=20),
plot.title= element_text(hjust = 0.5, family = "serif"),
plot.caption = element_text(size = 16),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20)
)
#save plot
ggsave('./figures-tables/usps_msa_grouped.png.png', plot = last_plot(), width = 10, height = 8)
#save plot
ggsave('./figures-tables/usps_msa_grouped.png', plot = last_plot(), width = 10, height = 8)
## Preliminaries
rm(list=ls())
## This function will check if a package is installed, and if not, install it
pkgTest <- function(x) {
if (!require(x, character.only = TRUE))
{
install.packages(x, dep = TRUE);
if(!require(x, character.only = TRUE)) stop("Package not found")
}
}
## These lines load the required packages
packages <- c("tidyverse", "xtable", "stargazer")
lapply(packages, pkgTest);
#set to your working directory
setwd('~/Documents/zillow/thesis/donut-effect/')
cities <- c('San Francisco, CA', 'New York, NY', 'Chicago, IL', 'Boston, MA',
'Los Angeles, CA', 'Washington, DC', 'Atlanta, GA', 'Miami, FL',
'Philadelphia, PA', 'Dallas, TX', 'Houston, TX', 'Phoenix, AZ')
df <- read_csv('~/Documents/zillow/thesis/data/USPS_gsb/Zip_code_zip_code_flows_output_v3.csv') %>%
mutate(ZIP_pre = as.double(ZIP_pre),
ZIP_post = as.double(ZIP_post),
total_count = count+spouses+children)
#total moves
print(sum(df$count))
#read in zip code characteristics
chars <- read_csv('~/Documents/zillow/thesis/donut-effect/data/zip_all_chars_cbd.csv') %>%
filter(!is.na(density2019), !is.na(`2019 Population`), !is.na(dist_to_cbd)) %>%
mutate(quantile_rank = 'cbd',
quantile_rank = replace(quantile_rank, dist_to_cbd >= 2000, ntile(density2019[dist_to_cbd>=2000], 10)),
category = ifelse(quantile_rank == 'cbd', 'cbd',
case_when(quantile_rank == 10 ~ 'high',
quantile_rank %in% c(8:9) ~ 'mid',
TRUE ~ 'low'))) %>%
select('zip', `2019 Population`, category, 'MetroShort')
#read in metro level characteristics
msa_chars <- msa_chars <- read_csv('~/Documents/zillow/thesis/donut-effect/data/msa_all_chars.csv') %>% filter(!is.na(MsaName)) %>%
mutate(msa_pop_rank = dense_rank(desc(`2019 Population`)),
msa_pop_group = ifelse(msa_pop_rank %in% c(1:12), 'high', 'other')) %>%
select(MetroShort, `2019 Population`, msa_pop_rank, msa_pop_group) %>%
rename(msa_pop_19 = `2019 Population`)
#merge
df <- df %>% left_join(chars, by = c('ZIP_pre' = 'zip')) %>%
left_join(chars, by = c('ZIP_post' = 'zip'), suffix = c('_pre', '_post')) %>%
left_join(msa_chars, by = c('MetroShort_post' = 'MetroShort')) %>%
mutate(msa_pop_group=replace(msa_pop_group, is.na(msa_pop_group), 'rural'),
MetroShort_pre=replace(MetroShort_pre, is.na(MetroShort_pre), 'rural'),
MetroShort_post=replace(MetroShort_post, is.na(MetroShort_post), 'rural'),
metro_category_pre = ifelse((MetroShort_pre %in% cities), 'top12',
ifelse(MetroShort_pre != 'rural', 'other', 'rural')),
metro_category_post = ifelse((MetroShort_post %in% cities), 'top12',
ifelse(MetroShort_post != 'rural', 'other', 'rural')))
#share of moves within-metro
sum(df[df$MetroShort_pre == df$MetroShort_post, 'count'], na.rm = TRUE)/sum(df$count, na.rm = TRUE)
#share of moves within-metro
sum(df[df$MetroShort_pre == df$MetroShort_post, 'count'], na.rm = TRUE)/sum(df$count, na.rm = TRUE)
#Align rural categories?
df <- df %>% mutate(category_pre=replace(category_pre, MetroShort_pre=='rural', 'rural'),
category_post=replace(category_post, MetroShort_post=='rural', 'rural')
) %>%
filter(!((metro_category_post=='rural') & (category_post!='rural')),
!((metro_category_pre=='rural') & (category_pre!='rural')))
table1 <- df %>% group_by(metro_category_pre, category_pre, metro_category_post, category_post,) %>%
summarise(total_count = sum(total_count, na.rm = TRUE)) %>%
pivot_wider(names_from = c(metro_category_post, category_post), values_from = total_count) %>%
mutate(origin = paste(metro_category_pre, category_pre, sep='_')) %>%
column_to_rownames(var = 'origin') %>%
select(top12_cbd, top12_high, top12_mid, top12_low,
other_cbd, other_high, other_mid, other_low, rural_rural)
df2 <- read_csv('~/Documents/zillow/thesis/data/USPS_gsb/Zip_code_zip_code_flows__control__output_v3.csv') %>%
mutate(ZIP_pre = as.double(ZIP_pre),
ZIP_post = as.double(ZIP_post),
total_count=count+spouses+children)
#total moves
print(sum(df2$count))
#merge
df2 <- df2 %>% left_join(chars, by = c('ZIP_pre' = 'zip')) %>%
left_join(chars, by = c('ZIP_post' = 'zip'), suffix = c('_pre', '_post')) %>%
left_join(msa_chars, by = c('MetroShort_post' = 'MetroShort')) %>%
mutate(msa_pop_group=replace(msa_pop_group, is.na(msa_pop_group), 'rural'),
MetroShort_pre=replace(MetroShort_pre, is.na(MetroShort_pre), 'rural'),
MetroShort_post=replace(MetroShort_post, is.na(MetroShort_post), 'rural'),
metro_category_pre = ifelse((MetroShort_pre %in% cities), 'top12',
ifelse(MetroShort_pre != 'rural', 'other', 'rural')),
metro_category_post = ifelse((MetroShort_post %in% cities), 'top12',
ifelse(MetroShort_post != 'rural', 'other', 'rural')))
#share of moves within-metro
sum(df2[df2$MetroShort_pre == df2$MetroShort_post, 'total_count'], na.rm = TRUE)/sum(df2$total_count, na.rm = TRUE)
#table of moves by density group
df2 <- df2 %>% mutate(category_pre=replace(category_pre, MetroShort_pre=='rural', 'rural'),
category_post=replace(category_post, MetroShort_post=='rural', 'rural')
) %>%
filter(!((metro_category_post=='rural') & (category_post!='rural')),
!((metro_category_pre=='rural') & (category_pre!='rural')))
table2 <- df2 %>% group_by(metro_category_pre, category_pre, metro_category_post, category_post,) %>%
summarise(total_count = sum(total_count, na.rm = TRUE)) %>%
pivot_wider(names_from = c(metro_category_post, category_post), values_from = total_count) %>%
mutate(origin = paste(metro_category_pre, category_pre, sep='_')) %>%
column_to_rownames(var = 'origin') %>%
select(top12_cbd, top12_high, top12_mid, top12_low,
other_cbd, other_high, other_mid, other_low, rural_rural)
tab = table1-table2
cities <- c('San Francisco, CA', 'New York, NY', 'Chicago, IL', 'Boston, MA',
'Los Angeles, CA', 'Washington, DC', 'Atlanta, GA', 'Miami, FL',
'Philadelphia, PA', 'Dallas, TX', 'Houston, TX', 'Phoenix, AZ')
df <- read_csv('~/Documents/zillow/thesis/data/USPS_gsb/Zip_code_zip_code_flows_output_v3.csv') %>%
mutate(ZIP_pre = as.double(ZIP_pre),
ZIP_post = as.double(ZIP_post),
total_count = count+spouses+children)
#total moves
print(sum(df$count))
#read in zip code characteristics
chars <- read_csv('~/Documents/zillow/thesis/donut-effect/data/zip_all_chars_cbd.csv') %>%
filter(!is.na(density2019), !is.na(`2019 Population`), !is.na(dist_to_cbd)) %>%
mutate(quantile_rank = 'cbd',
quantile_rank = replace(quantile_rank, dist_to_cbd >= 2000, ntile(density2019[dist_to_cbd>=2000], 10)),
category = ifelse(quantile_rank == 'cbd', 'cbd',
case_when(quantile_rank == 10 ~ 'high',
quantile_rank %in% c(8:9) ~ 'mid',
TRUE ~ 'low'))) %>%
select('zip', `2019 Population`, category, 'MetroShort')
#read in metro level characteristics
msa_chars <- msa_chars <- read_csv('~/Documents/zillow/thesis/donut-effect/data/msa_all_chars.csv') %>% filter(!is.na(MsaName)) %>%
mutate(msa_pop_rank = dense_rank(desc(`2019 Population`)),
msa_pop_group = ifelse(msa_pop_rank %in% c(1:12), 'high', 'other')) %>%
select(MetroShort, `2019 Population`, msa_pop_rank, msa_pop_group) %>%
rename(msa_pop_19 = `2019 Population`)
#merge
df <- df %>% left_join(chars, by = c('ZIP_pre' = 'zip')) %>%
left_join(chars, by = c('ZIP_post' = 'zip'), suffix = c('_pre', '_post')) %>%
left_join(msa_chars, by = c('MetroShort_post' = 'MetroShort')) %>%
mutate(msa_pop_group=replace(msa_pop_group, is.na(msa_pop_group), 'rural'),
MetroShort_pre=replace(MetroShort_pre, is.na(MetroShort_pre), 'rural'),
MetroShort_post=replace(MetroShort_post, is.na(MetroShort_post), 'rural'),
metro_category_pre = ifelse((MetroShort_pre %in% cities), 'top12',
ifelse(MetroShort_pre != 'rural', 'other', 'rural')),
metro_category_post = ifelse((MetroShort_post %in% cities), 'top12',
ifelse(MetroShort_post != 'rural', 'other', 'rural')),
within=ifelse(MetroShort_pre==MetroShort_post, 1, 0))
#share of moves within-metro
sum(df[df$within==1, 'count'], na.rm = TRUE)/sum(df$count, na.rm = TRUE)
#Align rural categories?
df <- df %>% mutate(category_pre=replace(category_pre, MetroShort_pre=='rural', 'rural'),
category_post=replace(category_post, MetroShort_post=='rural', 'rural')
) %>%
filter(!((metro_category_post=='rural') & (category_post!='rural')),
!((metro_category_pre=='rural') & (category_pre!='rural')))
table1 <- df %>% group_by(within, metro_category_pre, category_pre, metro_category_post, category_post,) %>%
summarise(total_count = sum(total_count, na.rm = TRUE)) %>%
pivot_wider(names_from = c(metro_category_post, category_post), values_from = total_count) %>%
mutate(origin = paste(metro_category_pre, category_pre, sep='_')) %>%
column_to_rownames(var = 'origin')
table1 <- df %>% group_by(metro_category_pre, category_pre, metro_category_post, category_post,) %>%
summarise(total_count = sum(total_count, na.rm = TRUE)) %>%
pivot_wider(names_from = c(metro_category_post, category_post), values_from = total_count) %>%
mutate(origin = paste(metro_category_pre, category_pre, sep='_')) %>%
column_to_rownames(var = 'origin')
View(df)
table1 <- df %>% group_by(within, metro_category_pre, category_pre, metro_category_post, category_post) %>%
summarise(total_count = sum(total_count, na.rm = TRUE)) %>%
pivot_wider(names_from = c(metro_category_post, category_post), values_from = total_count) %>%
mutate(origin = paste(metro_category_pre, category_pre, sep='_')) %>%
column_to_rownames(var = 'origin')
df <- read_csv('~/Documents/zillow/thesis/data/USPS_gsb/Zip_code_zip_code_flows_output_v3.csv') %>%
mutate(ZIP_pre = as.double(ZIP_pre),
ZIP_post = as.double(ZIP_post),
total_count = count+spouses+children)
#total moves
print(sum(df$count))
#read in zip code characteristics
chars <- read_csv('~/Documents/zillow/thesis/donut-effect/data/zip_all_chars_cbd.csv') %>%
filter(!is.na(density2019), !is.na(`2019 Population`), !is.na(dist_to_cbd)) %>%
mutate(quantile_rank = 'cbd',
quantile_rank = replace(quantile_rank, dist_to_cbd >= 2000, ntile(density2019[dist_to_cbd>=2000], 10)),
category = ifelse(quantile_rank == 'cbd', 'cbd',
case_when(quantile_rank == 10 ~ 'high',
quantile_rank %in% c(8:9) ~ 'mid',
TRUE ~ 'low'))) %>%
select('zip', `2019 Population`, category, 'MetroShort')
#read in metro level characteristics
msa_chars <- msa_chars <- read_csv('~/Documents/zillow/thesis/donut-effect/data/msa_all_chars.csv') %>% filter(!is.na(MsaName)) %>%
mutate(msa_pop_rank = dense_rank(desc(`2019 Population`)),
msa_pop_group = ifelse(msa_pop_rank %in% c(1:12), 'high', 'other')) %>%
select(MetroShort, `2019 Population`, msa_pop_rank, msa_pop_group) %>%
rename(msa_pop_19 = `2019 Population`)
#merge
df <- df %>% left_join(chars, by = c('ZIP_pre' = 'zip')) %>%
left_join(chars, by = c('ZIP_post' = 'zip'), suffix = c('_pre', '_post')) %>%
left_join(msa_chars, by = c('MetroShort_post' = 'MetroShort')) %>%
mutate(msa_pop_group=replace(msa_pop_group, is.na(msa_pop_group), 'rural'),
MetroShort_pre=replace(MetroShort_pre, is.na(MetroShort_pre), 'rural'),
MetroShort_post=replace(MetroShort_post, is.na(MetroShort_post), 'rural'),
metro_category_pre = ifelse((MetroShort_pre %in% cities), 'top12',
ifelse(MetroShort_pre != 'rural', 'other', 'rural')),
metro_category_post = ifelse((MetroShort_post %in% cities), 'top12',
ifelse(MetroShort_post != 'rural', 'other', 'rural')),
within=ifelse(MetroShort_pre==MetroShort_post, 'within', 'between'))
#share of moves within-metro
sum(df[df$within=='within', 'count'], na.rm = TRUE)/sum(df$count, na.rm = TRUE)
#Align rural categories?
df <- df %>% mutate(category_pre=replace(category_pre, MetroShort_pre=='rural', 'rural'),
category_post=replace(category_post, MetroShort_post=='rural', 'rural')
) %>%
filter(!((metro_category_post=='rural') & (category_post!='rural')),
!((metro_category_pre=='rural') & (category_pre!='rural')))
table1 <- df %>% group_by(within, metro_category_pre, category_pre, metro_category_post, category_post) %>%
summarise(total_count = sum(total_count, na.rm = TRUE)) %>%
pivot_wider(names_from = c(metro_category_post, category_post), values_from = total_count) %>%
mutate(origin = paste(metro_category_pre, category_pre, sep='_')) %>%
column_to_rownames(var = 'origin')
table1 <- df %>% group_by(within, metro_category_pre, category_pre, metro_category_post, category_post) %>%
summarise(total_count = sum(total_count, na.rm = TRUE)) %>%
pivot_wider(names_from = c(within, metro_category_post, category_post), values_from = total_count) %>%
mutate(origin = paste(within, metro_category_pre, category_pre, sep='_')) %>%
column_to_rownames(var = 'origin')
View(df)
df %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE))
df2 <- read_csv('~/Documents/zillow/thesis/data/USPS_gsb/Zip_code_zip_code_flows__control__output_v3.csv') %>%
mutate(ZIP_pre = as.double(ZIP_pre),
ZIP_post = as.double(ZIP_post),
total_count=count+spouses+children)
#total moves
print(sum(df2$count))
#merge
df2 <- df2 %>% left_join(chars, by = c('ZIP_pre' = 'zip')) %>%
left_join(chars, by = c('ZIP_post' = 'zip'), suffix = c('_pre', '_post')) %>%
left_join(msa_chars, by = c('MetroShort_post' = 'MetroShort')) %>%
mutate(msa_pop_group=replace(msa_pop_group, is.na(msa_pop_group), 'rural'),
MetroShort_pre=replace(MetroShort_pre, is.na(MetroShort_pre), 'rural'),
MetroShort_post=replace(MetroShort_post, is.na(MetroShort_post), 'rural'),
metro_category_pre = ifelse((MetroShort_pre %in% cities), 'top12',
ifelse(MetroShort_pre != 'rural', 'other', 'rural')),
metro_category_post = ifelse((MetroShort_post %in% cities), 'top12',
ifelse(MetroShort_post != 'rural', 'other', 'rural')),
within=ifelse(MetroShort_pre==MetroShort_post, 1, 0))
#merge
df2 <- df2 %>% left_join(chars, by = c('ZIP_pre' = 'zip')) %>%
left_join(chars, by = c('ZIP_post' = 'zip'), suffix = c('_pre', '_post')) %>%
left_join(msa_chars, by = c('MetroShort_post' = 'MetroShort')) %>%
mutate(msa_pop_group=replace(msa_pop_group, is.na(msa_pop_group), 'rural'),
MetroShort_pre=replace(MetroShort_pre, is.na(MetroShort_pre), 'rural'),
MetroShort_post=replace(MetroShort_post, is.na(MetroShort_post), 'rural'),
metro_category_pre = ifelse((MetroShort_pre %in% cities), 'top12',
ifelse(MetroShort_pre != 'rural', 'other', 'rural')),
metro_category_post = ifelse((MetroShort_post %in% cities), 'top12',
ifelse(MetroShort_post != 'rural', 'other', 'rural')),
within=ifelse(MetroShort_pre==MetroShort_post, 'within', 'between'))
#share of moves within-metro
sum(df2[df2$within=='within', 'total_count'], na.rm = TRUE)/sum(df2$total_count, na.rm = TRUE)
df2 <- read_csv('~/Documents/zillow/thesis/data/USPS_gsb/Zip_code_zip_code_flows__control__output_v3.csv') %>%
mutate(ZIP_pre = as.double(ZIP_pre),
ZIP_post = as.double(ZIP_post),
total_count=count+spouses+children)
#total moves
print(sum(df2$count))
#merge
df2 <- df2 %>% left_join(chars, by = c('ZIP_pre' = 'zip')) %>%
left_join(chars, by = c('ZIP_post' = 'zip'), suffix = c('_pre', '_post')) %>%
left_join(msa_chars, by = c('MetroShort_post' = 'MetroShort')) %>%
mutate(msa_pop_group=replace(msa_pop_group, is.na(msa_pop_group), 'rural'),
MetroShort_pre=replace(MetroShort_pre, is.na(MetroShort_pre), 'rural'),
MetroShort_post=replace(MetroShort_post, is.na(MetroShort_post), 'rural'),
metro_category_pre = ifelse((MetroShort_pre %in% cities), 'top12',
ifelse(MetroShort_pre != 'rural', 'other', 'rural')),
metro_category_post = ifelse((MetroShort_post %in% cities), 'top12',
ifelse(MetroShort_post != 'rural', 'other', 'rural')),
within=ifelse(MetroShort_pre==MetroShort_post, 'within', 'between'))
#share of moves within-metro
sum(df2[df2$within=='within', 'total_count'], na.rm = TRUE)/sum(df2$total_count, na.rm = TRUE)
#table of moves by density group
df2 <- df2 %>% mutate(category_pre=replace(category_pre, MetroShort_pre=='rural', 'rural'),
category_post=replace(category_post, MetroShort_post=='rural', 'rural')
) %>%
filter(!((metro_category_post=='rural') & (category_post!='rural')),
!((metro_category_pre=='rural') & (category_pre!='rural')))
table2 <- df2 %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE))
tab = table1-table2
table1
table1 <- df %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE))
table1
tab = table1-table2
table1
table2
table1 %>% column_to_rownames('total_count')
t(table1)
table1 <- df %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE))
t(table1)
table1 <- df %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE))
table1
t(table1)
library(janitor)
install.packages('janitor')
library(janitor)
table2 <- df2 %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
row_to_names(1)
table2
table2 <- df2 %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE))
table2
table2 <- df2 %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
pivot_wider(names_from=move_type, values_from=total_count)
table2
table1 <- df %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
pivot_wider(names_from=move_type, values_from=total_count)
tab = table1-table2
tab
colSums(tab)
rowSums(tab)
tab = table1-table2
tab = tab %>% select(-cbd)
tab=tab/rowSums(tab)
tab
tab_flow<-rbind(table1, table2)
tab_flow['sum',]=tab1e1-table2
table1 <- df %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
pivot_wider(names_from=move_type, values_from=total_count)
table2 <- df2 %>% filter(MetroShort_pre %in% cities) %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
pivot_wider(names_from=move_type, values_from=total_count)
tab_flow<-rbind(table1, table2)
tab_flow['sum',]=tab1e1-table2
tab_flow['sum',]=table1-table2
tab_flow
tab_flow[1,]
tab_flow['sum',]=tab_flow[1,]-tab_flow[2,]
tab_flow[3,]=tab_flow[1,]-tab_flow[2,]
tab_flow
table1 <- df %>% filter((MetroShort_pre %in% cities) & (category_pre='cbd'))%>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
pivot_wider(names_from=move_type, values_from=total_count)
table1 <- df %>% filter(MetroShort_pre %in% cities, category_pre='cbd')%>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
pivot_wider(names_from=move_type, values_from=total_count)
table1 <- df %>% filter(MetroShort_pre %in% cities, category_pre=='cbd')%>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
pivot_wider(names_from=move_type, values_from=total_count)
table2 <- df2 %>% filter(MetroShort_pre %in% cities, category_pre=='cbd') %>%
mutate(move_type = ifelse(within=='within', category_post, metro_category_post)) %>%
group_by(move_type) %>% summarise(total_count=sum(total_count, na.rm=TRUE)) %>%
pivot_wider(names_from=move_type, values_from=total_count)
tab_flow<-rbind(table1, table2)
tab_flow[3,]=tab_flow[1,]-tab_flow[2,]
tab_flow$total=rowSums(tab_flow)
tab_flow
tab_flow %>%select(-cbd)
tab_flow=tab_flow[, c("high", "low", "mid", 'top12', 'other', 'rural', 'total')]
tab_flow %>% write_csv('cbd_net_flow_distribution.csv')
